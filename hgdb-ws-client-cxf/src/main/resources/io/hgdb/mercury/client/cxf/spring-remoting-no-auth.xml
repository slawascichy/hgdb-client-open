<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<bean id="springBean.isRemote"
		class="java.lang.Boolean" lazy-init="true">
		<constructor-arg type="java.lang.String">
			<value>true</value>
		</constructor-arg>
	</bean>

	<!-- Brak uwierzytelniania -->
	<!-- 
	<bean id="basicHttpInvokerRequestExecutor"
		class="org.mercury.cxf.client.security.BasicHttpInvokerRequestExecutor">
		<property name="identifier"
			value="${mercury.ws.security.identifier}" />
		<property name="token"
			value="${mercury.ws.security.token}" />
	</bean>
 	-->
 
 	<!-- Sekwencje -->
	<bean id="springBean.InvokerSequenceService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/SequenceAction" />
		<property name="serviceInterface"
			value="org.mercury.ws.server.api.actions.common.ISequenceAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="sequenceAction" scope="singleton"
		class="io.hgdb.mercury.client.cxf.common.SequenceAction">
		<property name="service" ref="springBean.InvokerSequenceService" />
	</bean>
 
	<!-- Notyfikacje -->
	<bean id="springBean.InvokerNotyficationService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/NotyficationAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.INotyficationAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="notyficationLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.NotyficationLogic">
		<property name="service" ref="springBean.InvokerNotyficationService" />
	</bean>

	<!-- Statystyki - start -->
	<bean id="springBean.InvokerStore2TypeStatsBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/Store2TypeStatsBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.IStore2TypeStatsBusinessAction" />
		<!--property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="store2TypeStatsBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.Store2TypeStatsBusiness">
		<property name="service"
			ref="springBean.InvokerStore2TypeStatsBusinessService" />
	</bean>
	
	<bean id="springBean.InvokerParticipant2TypeStatsBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/Participant2TypeStatsBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.IParticipant2TypeStatsBusinessAction" />
		<!--property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="participant2TypeStatsBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.Participant2TypeStatsBusiness">
		<property name="service"
			ref="springBean.InvokerParticipant2TypeStatsBusinessService" />
	</bean>
	<!-- Statystyki - koniec -->

	<!-- dict -->
	<bean id="springBean.InvokerRoleService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/RoleAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.dict.IRoleAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="roleLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.dict.RoleLogic">
		<property name="service" ref="springBean.InvokerRoleService" />
	</bean>

	<bean id="springBean.InvokerTypeKindService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeKindAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.dict.ITypeKindAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeKindLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.dict.TypeKindLogic">
		<property name="service" ref="springBean.InvokerTypeKindService" />
	</bean>

	<bean id="springBean.InvokerSourceService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/SourceAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.dict.ISourceAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="sourceLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.dict.SourceLogic">
		<property name="service" ref="springBean.InvokerSourceService" />
	</bean>

	<bean id="springBean.InvokerInitStatusService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/InitStatusAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.dict.IInitStatusAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="initStatusLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.dict.InitStatusLogic">
		<property name="service" ref="springBean.InvokerInitStatusService" />
	</bean>
	<!-- dict -->

	<!-- attr -->
	<bean id="springBean.InvokerCaseViewDefinitionService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseViewDefinitionAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ICaseViewDefinitionAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseViewDefinitionLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.CaseViewDefinitionLogic">
		<property name="service" ref="springBean.InvokerCaseViewDefinitionService" />
	</bean>

	<bean id="springBean.InvokerTypeParamRoleService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeParamRoleAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ITypeParamRoleAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeParamRoleLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.TypeParamRoleLogic">
		<property name="service" ref="springBean.InvokerTypeParamRoleService" />
	</bean>

	<bean id="springBean.InvokerTypeParamActionService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeParamActionAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ITypeParamActionAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeParamActionLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.TypeParamActionLogic">
		<property name="service" ref="springBean.InvokerTypeParamActionService" />
	</bean>

	<bean id="springBean.InvokerTypeCaseService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeCaseAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ITypeCaseAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeCaseLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.TypeCaseLogic">
		<property name="service" ref="springBean.InvokerTypeCaseService" />
	</bean>

	<bean id="springBean.InvokerTypeCodeService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeCodeAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ITypeCodeAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeCodeLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.TypeCodeLogic">
		<property name="service" ref="springBean.InvokerTypeCodeService" />
	</bean>

	<bean id="springBean.InvokerType2TypeService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/Type2TypeAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.IType2TypeAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="type2TypeLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.Type2TypeLogic">
		<property name="service" ref="springBean.InvokerType2TypeService" />
	</bean>

	<bean id="springBean.InvokerTypeParamService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/TypeParamAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.ITypeParamAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeParamLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.TypeParamLogic">
		<property name="service" ref="springBean.InvokerTypeParamService" />
	</bean>

	<bean id="springBean.InvokerParamDefinitionService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/ParamDefinitionAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.attr.IParamDefinitionAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="paramDefinitionLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.attr.ParamDefinitionLogic">
		<property name="service" ref="springBean.InvokerParamDefinitionService" />
	</bean>
	<!-- attr -->

	<!-- data -->
	<bean id="springBean.InvokerCase2CaseService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/Case2CaseAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICase2CaseAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="case2CaseLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.Case2CaseLogic">
		<property name="service" ref="springBean.InvokerCase2CaseService" />
	</bean>

	<bean id="springBean.InvokerCaseService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICaseAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.CaseLogic">
		<property name="service" ref="springBean.InvokerCaseService" />
	</bean>

	<bean id="springBean.InvokerCaseDocumentService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseDocumentAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICaseDocumentAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseDocumentLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.CaseDocumentLogic">
		<property name="service" ref="springBean.InvokerCaseDocumentService" />
	</bean>

	<bean id="springBean.InvokerCaseHistoryStreamService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseHistoryStreamAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICaseHistoryStreamAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseHistoryStreamLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.CaseHistoryStreamLogic">
		<property name="service" ref="springBean.InvokerCaseHistoryStreamService" />
	</bean>

	<bean id="springBean.InvokerCaseHistoryTraceService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseHistoryTraceAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICaseHistoryTraceAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseHistoryTraceLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.CaseHistoryTraceLogic">
		<property name="service" ref="springBean.InvokerCaseHistoryTraceService" />
	</bean>

	<bean id="springBean.InvokerGroupCaseService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/GroupCaseAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IGroupCaseAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="groupCaseLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.GroupCaseLogic">
		<property name="service" ref="springBean.InvokerGroupCaseService" />
	</bean>

	<bean id="springBean.InvokerSystemUserService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/SystemUserAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ISystemUserAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="systemUserLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.SystemUserLogic">
		<property name="service" ref="springBean.InvokerSystemUserService" />
	</bean>

	<bean id="springBean.InvokerStoreService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/StoreAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IStoreAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="storeLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.StoreLogic">
		<property name="service" ref="springBean.InvokerStoreService" />
	</bean>

	<bean id="springBean.InvokerCommentService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CommentAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICommentAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="commentLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.CommentLogic">
		<property name="service" ref="springBean.InvokerCommentService" />
	</bean>

	<bean id="springBean.InvokerQuickTaskService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/QuickTaskAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IQuickTaskAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="quickTaskLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.QuickTaskLogic">
		<property name="service" ref="springBean.InvokerQuickTaskService" />
	</bean>

	<bean id="springBean.InvokerKtmNumberService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/KtmNumberAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IKtmNumberAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="ktmNumberLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.KtmNumberLogic">
		<property name="service" ref="springBean.InvokerKtmNumberService" />
	</bean>

	<bean id="springBean.InvokerLoggerEventService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/LoggerEventAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ILoggerEventAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="loggerEventLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.LoggerEventLogic">
		<property name="service" ref="springBean.InvokerLoggerEventService" />
	</bean>

	<bean id="springBean.InvokerParticipantService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/ParticipantAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IParticipantAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="participantLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.ParticipantLogic">
		<property name="service" ref="springBean.InvokerParticipantService" />
	</bean>

	<bean id="springBean.InvokerParticipantHistoryStreamService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/ParticipantHistoryStreamAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IParticipantHistoryStreamAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="participantHistoryStreamLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.ParticipantHistoryStreamLogic">
		<property name="service"
			ref="springBean.InvokerParticipantHistoryStreamService" />
	</bean>

	<bean id="springBean.InvokerParticipantHistoryTraceService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/ParticipantHistoryTraceAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IParticipantHistoryTraceAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="participantHistoryTraceLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.ParticipantHistoryTraceLogic">
		<property name="service"
			ref="springBean.InvokerParticipantHistoryTraceService" />
	</bean>

	<bean id="springBean.InvokerStore2TypeService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/Store2TypeAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IStore2TypeAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="store2TypeLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.Store2TypeLogic">
		<property name="service" ref="springBean.InvokerStore2TypeService" />
	</bean>

	<bean id="springBean.InvokerStoreHistoryStreamService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/StoreHistoryStreamAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IStoreHistoryStreamAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="storeHistoryStreamLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.StoreHistoryStreamLogic">
		<property name="service" ref="springBean.InvokerStoreHistoryStreamService" />
	</bean>

	<bean id="springBean.InvokerGroupCase2ParticipantService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/GroupCase2ParticipantAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.IGroupCase2ParticipantAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="groupCase2ParticipantLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.GroupCase2ParticipantLogic">
		<property name="service"
			ref="springBean.InvokerGroupCase2ParticipantService" />
	</bean>

	<bean id="springBean.InvokerCase2SubCaseService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/Case2SubCaseAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.data.ICase2SubCaseAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="case2SubCaseLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.data.Case2SubCaseLogic">
		<property name="service" ref="springBean.InvokerCase2SubCaseService" />
	</bean>
	<!-- data -->

	<!-- pamięć podręczna -->
	<bean id="springBean.InvokerCacheManagerService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CacheManagerAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.cache.ICacheManagerAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="cacheManagerLogic" scope="singleton"
		class="io.hgdb.mercury.client.cxf.logic.cache.CacheManagerLogic">
		<property name="service" ref="springBean.InvokerCacheManagerService" />
	</bean>
	<!-- pamięć podręczna -->

	<!-- Sekretarze danych -->
	<bean id="springBean.InvokerBpmBPDInstanceBufferSecretaryManagerService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/BpmBPDInstanceBufferSecretaryManagerAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.bpm.IBpmBPDInstanceBufferSecretaryManagerAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="bpmBPDInstanceBufferSecretaryManager" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.bpm.BpmBPDInstanceBufferSecretaryManager">
		<property name="service"
			ref="springBean.InvokerBpmBPDInstanceBufferSecretaryManagerService" />
	</bean>

	<bean id="springBean.InvokerBpmTaskBufferSecretaryManagerService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/BpmTaskBufferSecretaryManagerAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.bpm.IBpmTaskBufferSecretaryManagerAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="bpmTaskBufferSecretaryManager" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.bpm.BpmTaskBufferSecretaryManager">
		<property name="service"
			ref="springBean.InvokerBpmTaskBufferSecretaryManagerService" />
	</bean>
	<!-- Sekretarze danych -->

	<!-- CaseBusiness -->
	<bean id="springBean.InvokerCaseBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.ICaseBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.CaseBusiness">
		<property name="service" ref="springBean.InvokerCaseBusinessService" />
		<property name="isRemote" ref="springBean.isRemote"/>
	</bean>
	<!-- CaseBusiness -->
	
	<!-- Case2CaseBusiness -->
	<bean id="springBean.InvokerCase2CaseBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/Case2CaseBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.ICase2CaseBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="case2CaseBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.Case2CaseBusiness">
		<property name="service" ref="springBean.InvokerCase2CaseBusinessService" />
		<property name="isRemote" ref="springBean.isRemote"/>
	</bean>
	<!-- Case2CaseBusiness -->
	
	<!-- CaseHistoryStreamBusiness -->
	<bean id="springBean.InvokerCaseHistoryStreamBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseHistoryStreamBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.ICaseHistoryStreamBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseHistoryStreamBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.CaseHistoryStreamBusiness">
		<property name="service" ref="springBean.InvokerCaseHistoryStreamBusinessService" />
	</bean>
	<!-- CaseHistoryStreamBusiness -->

	<!-- CaseHistoryTraceBusiness -->
	<bean id="springBean.InvokerCaseHistoryTraceBusinessService" scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl" value="${mercury.ws.url}/CaseHistoryTraceBusinessAction" />
		<property name="serviceInterface"
			value="org.mercury.ws.server.api.actions.business.data.ICaseHistoryTraceBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="caseHistoryTraceBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.CaseHistoryTraceBusiness">
		<property name="service" ref="springBean.InvokerCaseHistoryTraceBusinessService" />
		<property name="isRemote" ref="springBean.isRemote"/>
	</bean>
	<!-- CaseHistoryTraceBusiness -->

	<!-- Store2TypeLastVersionBusiness -->
	<bean id="springBean.InvokerStore2TypeLastVersionBusinessService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/Store2TypeLastVersionBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.data.IStore2TypeLastVersionBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="store2TypeLastVersionBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.data.Store2TypeLastVersionBusiness">
		<property name="service"
			ref="springBean.InvokerStore2TypeLastVersionBusinessService" />
	</bean>
	<!-- Store2TypeLastVersionBusiness -->

	<!-- TypeCodeWithLastVersionBusiness -->
	<bean id="springBean.InvokerTypeCodeWithLastVersionBusinessService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/TypeCodeWithLastVersionBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.attr.ITypeCodeWithLastVersionBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="typeCodeWithLastVersionBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.attr.TypeCodeWithLastVersionBusiness">
		<property name="service"
			ref="springBean.InvokerTypeCodeWithLastVersionBusinessService" />
	</bean>
	<!-- TypeCodeWithLastVersionBusiness -->

	<!-- Type2TypeWithLastVersionBusiness -->
	<bean id="springBean.InvokerType2TypeWithLastVersionBusinessService"
		scope="singleton"
		class="org.spring4hgdb.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="${mercury.ws.url}/Type2TypeWithLastVersionBusinessAction" />
		<property name="serviceInterface"
			value="pro.ibpm.mercury.ws.server.api.actions.business.attr.IType2TypeWithLastVersionBusinessAction" />
		<!-- property name="httpInvokerRequestExecutor" ref="basicHttpInvokerRequestExecutor"/ -->
	</bean>
	<bean id="type2TypeWithLastVersionBusiness" scope="singleton"
		class="io.hgdb.mercury.client.cxf.business.attr.Type2TypeWithLastVersionBusiness">
		<property name="service"
			ref="springBean.InvokerType2TypeWithLastVersionBusinessService" />
	</bean>
	<!-- Type2TypeWithLastVersionBusiness -->



</beans>
